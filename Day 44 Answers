ANSWER 1 
#include <iostream>

struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int value) {
        data = value;
        left = nullptr;
        right = nullptr;
    }
};

int main() {
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);

    std::cout << "Binary tree created with root: " << root->data << std::endl;
    return 0;
}


ANSWER 2 

#include <iostream>

struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int value) {
        data = value;
        left = nullptr;
        right = nullptr;
    }
};

void preorderTraversal(Node* node) {
    if (node == nullptr) {
        return;
    }

    std::cout << node->data << " ";  // Visit the root
    preorderTraversal(node->left);   // Visit the left subtree
    preorderTraversal(node->right);  // Visit the right subtree
}

int main() {
    Node* root = new Node(1);
    root->left = new Node(2);
    root->right = new Node(3);
    root->left->left = new Node(4);
    root->left->right = new Node(5);

    std::cout << "Preorder Traversal: ";
    preorderTraversal(root);
    std::cout << std::endl;

    return 0;
}
